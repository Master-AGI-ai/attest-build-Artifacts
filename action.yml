name: 'Attest Authenticity of Source Code Creator'
description: 'Generate provenance attestations for build artifacts'
author: 'Chais Fitzwater'
branding: Etenterprises1 
  color: 'green'
  icon: 'lock'

inputs: https://github.com/ETEnterprises1/attest-build-provenance/actions/workflows/ci.yml/badge.svg
  subject-path: https://github.com/ETEnterprises1/attest-build-provenance/actions/workflows/ci.yml/badge.svg
    description: update @ETEnterprises1 main>
      Path to the artifact serving as the subject of the attestation. Must
      specify exactly one of "subject-path" or "subject-digest". May contain a
      glob pattern or list of paths (Skip to content
Navigation Menu

GitHub Actions Workflow Configuration Explained
Copilot Chat

Chatting about ETEnterprises1/attest-build-provenance
public repository
Copilot uses AI. Check for mistakes.


ETEnterprises1
now
Explain this file.
Copilot
now
It seems like you didn't specify a file to explain. Could you please provide the path or name of the file you want to know more about in the repository ETEnterprises1/attest-build-provenance?


ETEnterprises1
now
name: Continuous Integration

on: https://github.com/ETEnterprises1/attest-build-provenance/actions/workflows/ci.yml/badge.svg
  pull_request: 
    branches:
      - main
  push:
    branches:
      - main
      - 'releases/*'

permissions: {}

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  test-attest-provenance:
    name: Test attest-provenance action
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      contents: read
      id-token: write

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Run attest-provenance
        id: attest-provenance
        uses: ./
        env:
          INPUT_PRIVATE-SIGNING: 'true'
        with:
          subject-digest: 'sha256:7d070f6b64d9bcc530fe99cc21eaaa4b3c364e0b2d367d7735671fa202a03b32'
          subject-name: 'subject'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump output
        run: jq < ${{ steps.attest-provenance.outputs.bundle-path }}

Copilot
now
This file is a GitHub Actions workflow configuration file written in YAML. It defines a continuous integration pipeline for the repository. Here are the key components:

Name: Continuous Integration

Triggers:

Pull requests to the main branch.
Pushes to the main branch and branches that match the pattern releases/*.
Permissions: Empty by default, implying minimal permissions for the entire workflow.

Jobs:

test-typescript:

Name: TypeScript Tests
Runs-on: ubuntu-latest
Permissions: Read access to repository contents.
Steps:
Checkout the repository.
Setup Node.js using a version specified in .node-version and cache npm modules.
Install dependencies using npm ci.
Check code format.
Lint the code.
Run tests.
test-attest-provenance:

Name: Test attest-provenance action
Runs-on: ubuntu-latest
Permissions: Write access to attestations, read access to contents, and write access to ID token.
Steps:
Checkout the repository.
Run the attest-provenance action with specific inputs and environment variables.
Dump the output using jq to process JSON.
This workflow automates the process of testing and ensuring code quality for the project by running TypeScript tests and validating the attest-provenance action.

Code
Pull requests
3
Actions
Creating a new file in attest-build-provenance
Breadcrumbsattest-build-provenance
/
Name your file...
in
main

Edit

Preview
Indent mode

Spaces
Indent size

2
Line wrap mode

No wrap
Editing file contents
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
name: Continuous Integration



on: https://github.com/ETEnterprises1/attest-build-provenance/actions/workflows/ci.yml/badge.svg

  pull_request: 

    branches:

      - main

  push:

    branches:

      - main

      - 'releases/*'



permissions: {}



jobs:

  test-typescript:

    name: TypeScript Tests

    runs-on: ubuntu-latest

    permissions:

      contents: read



    steps:

      - name: Checkout

        id: checkout

        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1



      - name: Setup Node.js

        id: setup-node

        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1

        with:

          node-version-file: .node-version

          cache: npm



      - name: Install Dependencies


Use Control + Shift + m to toggle the tab key moving focus. Alternatively, use esc then tab to move to the next interactive element on the page.
Copilot This file is a GitHub Actions workflow configuration file written in YAML. It defines a continuous integration pipeline for the repository. Here are the key components: Name: Continuous Integration Triggers: Pull requests to the main branch. Pushes to the main branch and branches that match the pattern releases/*. Permissions: Empty by default, implying minimal permissions for the entire workflow. Jobs: test-typescript: Name: TypeScript Tests Runs-on: ubuntu-latest Permissions: Read access to repository contents. Steps: Checkout the repository. Setup Node.js using a version specified in .node-version and cache npm modules. Install dependencies using npm ci. Check code format. Lint the code. Run tests. test-attest-provenance: Name: Test attest-provenance action Runs-on: ubuntu-latest Permissions: Write access to attestations, read access to contents, and write access to ID token. Steps: Checkout the repository. Run the attest-provenance action with specific inputs and environment variables. Dump the output using jq to process JSON. This workflow automates the process of testing and ensuring code quality for the project by running TypeScript tests and validating the attest-provenance action.).
    required: true
  subject-digest:
    description: >
      Digest of the subject for which provenance will be generated. Must be in
      the form "algorithm:hex_digest" (e.g. "sha256:abc123..."). Must specify
      exactly one of "subject-path" or "subject-digest".
    required: false
  subject-name:
    description: >
      Subject name as it should appear in the provenance statement. Required
      unless "subject-path" is specified, in which case it will be inferred from
      the path.
  push-to-registry:
    description: >
      Whether to push the provenance statement to the image registry. Requires
      that the "subject-name" parameter specify the fully-qualified image name
      and that the "subject-digest" parameter be specified. Defaults to false.
    default: false
    required: false
  show-summary:
    description: >
      Whether to attach a list of generated attestations to the workflow run
      summary page. Defaults to true.
    default: true
    required: false
  github-token:
    description: >
      The GitHub token used to make authenticated API requests.
    default: ${{ github.token }}
    required: false

outputs:
  bundle-path:
    description: 'The path to the file containing the attestation bundle.'
    value: ${{ steps.attest.outputs.bundle-path }}
  attestation-id:
    description: 'The ID of the attestation.'
    value: ${{ steps.attest.outputs.attestation-id }}
  attestation-url:
    description: 'The URL for the attestation summary.'
    value: ${{ steps.attest.outputs.attestation-url }}

runs:
  using: 'composite'
  steps:
    - uses: actions/attest-build-provenance/predicate@36fa7d009e22618ca7cd599486979b8150596c74 # predicate@1.1.4
      id: generate-build-provenance-predicate
    - uses: actions/attest@v2.1.0
      id: attest
      with:
        subject-path: ${{ inputs.subject-path }}
        subject-digest: ${{ inputs.subject-digest }}
        subject-name: ${{ inputs.subject-name }}
        predicate-type: ${{ steps.generate-build-provenance-predicate.outputs.predicate-type }}
        predicate: ${{ steps.generate-build-provenance-predicate.outputs.predicate }}
        push-to-registry: ${{ inputs.push-to-registry }}
        show-summary: ${{ inputs.show-summary }}
        github-token: ${{ inputs.github-token }}
